name: Detect Merge from Base Branch and Notify Teams

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  detect-merge-from-base:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set branch environment variables
        id: vars
        run: |
          echo "BASE_BRANCH=${{ github.base_ref }}" >> $GITHUB_ENV
          echo "FEATURE_BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV
          COMMON_ANCESTOR=$(git merge-base origin/main origin/${{ github.head_ref }})
          echo "BASE_COMMIT=$COMMON_ANCESTOR" >> $GITHUB_ENV

      - name: Print all commits from common ancestor to feature branch
        id: print_commits
        run: |
          echo "üìã All commits from $BASE_COMMIT to origin/$FEATURE_BRANCH:"
          git log --pretty=format:"‚Ä¢ %h | %an | %ad | %s" --date=short $BASE_COMMIT..origin/$FEATURE_BRANCH

      - name: Detect merges from base branch only
        id: detect
        run: |
          echo "üîç Checking for merges from $BASE_BRANCH in commits after $BASE_COMMIT..."

          MERGE_COMMITS=()

          for sha in $(git rev-list --merges "$BASE_COMMIT"..origin/"$FEATURE_BRANCH"); do
            parent2=$(git rev-parse "$sha^2")
            if git merge-base --is-ancestor "$parent2" origin/"$BASE_BRANCH"; then
              MERGE_COMMITS+=("$sha")
            fi
          done

          if [ ${#MERGE_COMMITS[@]} -gt 0 ]; then
            echo "‚ùå Merge commit(s) from $BASE_BRANCH detected:"
            for sha in "${MERGE_COMMITS[@]}"; do
              git show -s --format="‚Ä¢ %h | %an | %ad | %s" --date=short "$sha"
            done

            FIRST_SHA="${MERGE_COMMITS[0]}"
            AUTHOR=$(git show -s --format="%an" "$FIRST_SHA")
            DATE=$(git show -s --format="%cI" "$FIRST_SHA")
            PARENT1=$(git rev-parse "$FIRST_SHA^1")
            PARENT2=$(git rev-parse "$FIRST_SHA^2")
            MESSAGE=$(git show -s --format="%s" "$FIRST_SHA")
            REPO_URL="https://github.com/${{ github.repository }}"
            COMMIT_URL="$REPO_URL/commit/$FIRST_SHA"

            {
              echo "merge_list<<EOF"
              for sha in "${MERGE_COMMITS[@]}"; do
                git show -s --format="‚Ä¢ %h | %an | %ad | %s" --date=short "$sha"
              done
              echo "EOF"
              echo "merge_commit=$FIRST_SHA"
              echo "merge_author=$AUTHOR"
              echo "merge_date=$DATE"
              echo "merge_message=$MESSAGE"
              echo "parent1=$PARENT1"
              echo "parent2=$PARENT2"
              echo "commit_url=$COMMIT_URL"
            } >> $GITHUB_OUTPUT

            echo "includes_base=true" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "‚úÖ No merge commits from $BASE_BRANCH found."
            echo "includes_base=false" >> $GITHUB_OUTPUT
          fi

      - name: Post PR comment if merge detected
        if: failure()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
          MERGE_INFO: ${{ steps.detect.outputs.merge_list }}
        run: |
          echo "üí¨ Posting comment to PR about invalid merge..."
          gh api -X POST /repos/$REPO/issues/$PR_NUMBER/comments \
            -f body="‚ùå **Error**: Merge commits from \`${{ github.base_ref }}\` were detected in this PR. Please remove them and rebase your branch from \`main\` instead.\n\n**Detected Merge Commits:**\n\`\`\`\n$MERGE_INFO\n\`\`\`"

      - name: Send Power Automate notification
        if: steps.detect.outputs.includes_base == 'true'
        env:
          POWER_WEBHOOK: ${{ secrets.POWER_AUTOMATE_WEBHOOK }}
          BASE: ${{ github.base_ref }}
          HEAD: ${{ github.head_ref }}
          PR_URL: ${{ github.event.pull_request.html_url }}
          AUTHOR: ${{ github.event.pull_request.user.login }}
          MERGE_INFO: ${{ steps.detect.outputs.merge_list }}
          MERGE_COMMIT: ${{ steps.detect.outputs.merge_commit }}
          MERGE_AUTHOR: ${{ steps.detect.outputs.merge_author }}
          MERGE_DATE: ${{ steps.detect.outputs.merge_date }}
          MERGE_MESSAGE: ${{ steps.detect.outputs.merge_message }}
          PARENT1: ${{ steps.detect.outputs.parent1 }}
          PARENT2: ${{ steps.detect.outputs.parent2 }}
          COMMIT_URL: ${{ steps.detect.outputs.commit_url }}
        run: |
          echo "üì° Sending alert to Power Automate webhook..."

          curl -X POST "$POWER_WEBHOOK" \
            -H 'Content-Type: application/json' \
            -d "{
              \"author\": \"$AUTHOR\",
              \"base\": \"$BASE\",
              \"head\": \"$HEAD\",
              \"pr_url\": \"$PR_URL\",
              \"merge_info\": \"$MERGE_INFO\",
              \"merge_commit\": \"$MERGE_COMMIT\",
              \"merge_author\": \"$MERGE_AUTHOR\",
              \"merge_date\": \"$MERGE_DATE\",
              \"merge_message\": \"$MERGE_MESSAGE\",
              \"parent1\": \"$PARENT1\",
              \"parent2\": \"$PARENT2\",
              \"commit_url\": \"$COMMIT_URL\"
            }"
