name: Detect Merge/Rebase from Base Branch and Notify Teams

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  detect-conflict-merge-message:
    runs-on: ubuntu-latest
    outputs:
      includes_base: ${{ steps.detect.outputs.includes_base }}
      merge_list: ${{ steps.detect.outputs.merge_list }}

    steps:
      # -- 1. Check out the PR code --------------------------
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # -- 2. Make sure both the PR‚Äôs base branch *and* main exist locally
      - name: Fetch base and main branches
        run: |
          # Pull the PR‚Äôs base branch (e.g. develop/release) and the main branch
          git fetch origin ${{ github.base_ref }} main

      # -- 3. Detect any merges/rebases from the base branch ------------------
      - name: Detect merges/rebases from base branch
        id: detect
        run: |
          set -e
          BASE_BRANCH="${{ github.base_ref }}"
          FEATURE_BRANCH="${{ github.head_ref }}"
          MAIN_BRANCH="main"

          echo "üîç Detecting merges/rebases from $BASE_BRANCH into $FEATURE_BRANCH after diverging from $MAIN_BRANCH..."

          # Look for merge commits that pulled $BASE_BRANCH into the feature branch
          merge_commits=$(git log $MAIN_BRANCH..HEAD --merges --pretty=format:"%H" \
                           --grep="Merge branch '$BASE_BRANCH'" || true)

          if [ -n "$merge_commits" ]; then
            echo "Includes merge commits from $BASE_BRANCH"
            echo "includes_base=true"       >> "$GITHUB_OUTPUT"
            echo "merge_list=$(echo $merge_commits | tr ' ' ',')" >> "$GITHUB_OUTPUT"
          else
            echo "No merge commits detected from $BASE_BRANCH"
            echo "includes_base=false"      >> "$GITHUB_OUTPUT"
            echo "merge_list="              >> "$GITHUB_OUTPUT"
          fi

      # -- 4. Comment on the PR if a merge/rebase was detected ----------------
      - name: Post PR comment on detection
        if: steps.detect.outputs.includes_base == 'true'
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
        run: |
          echo "Posting PR comment..."
          gh api -X POST /repos/$REPO/issues/$PR_NUMBER/comments \
            -f body="‚ö†Ô∏è **Critical Alert**: Merge/Rebase from \`${{ github.base_ref }}\` detected in this feature branch. Please review."

      # -- 5. Send a detailed Microsoft Teams notification --------------------
      - name: Send detailed Teams notification on detection
        if: steps.detect.outputs.includes_base == 'true'
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
          PR_URL: ${{ github.event.pull_request.html_url }}
          REPO: ${{ github.repository }}
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
          MERGE_LIST: ${{ steps.detect.outputs.merge_list }}
          BASE_BRANCH_NAME: ${{ github.base_ref }}
          FEATURE_BRANCH: ${{ github.head_ref }}
        run: |
          echo "Preparing Teams notification..."

          # Split comma-separated commit SHAs into an array
          IFS=',' read -r -a commits <<< "$MERGE_LIST"

          MERGE_COMMIT_DETAILS=""
          for commit in "${commits[@]}"; do
            commit_info=$(git show -s --format="‚Ä¢ %h by %an on %ad ‚Äî %s" --date=short $commit)
            MERGE_COMMIT_DETAILS="${MERGE_COMMIT_DETAILS}${commit_info}\n"
          done

          # Build an Adaptive Card payload
          teams_message=$(jq -n \
            --arg pr_number "$PR_NUMBER" \
            --arg pr_title "$PR_TITLE" \
            --arg pr_author "$PR_AUTHOR" \
            --arg pr_url "$PR_URL" \
            --arg base_branch "$BASE_BRANCH_NAME" \
            --arg feature_branch "$FEATURE_BRANCH" \
            --arg merge_commits "$MERGE_COMMIT_DETAILS" \
            '{
              type: "AdaptiveCard",
              version: "1.4",
              body: [
                {
                  type: "TextBlock",
                  text: "‚ö†Ô∏è **Critical Alert: Merge/Rebase Detected from Base Branch**",
                  weight: "Bolder",
                  size: "Medium",
                  color: "Attention"
                },
                {
                  type: "FactSet",
                  facts: [
                    { title: "PR Number:", value: "[#"+$pr_number+"]("+$pr_url+")" },
                    { title: "Title:",      value: $pr_title },
                    { title: "Author:",     value: $pr_author },
                    { title: "Base:",       value: $base_branch },
                    { title: "Feature:",    value: $feature_branch }
                  ]
                },
                {
                  type: "TextBlock",
                  text: "Merge Commits Detected:",
                  weight: "Bolder",
                  spacing: "Medium"
                },
                {
                  type: "TextBlock",
                  text: $merge_commits,
                  wrap: true,
                  spacing: "None"
                }
              ],
              msteams: { width: "Full" }
            }')

          # Send the card to Teams
          curl -H "Content-Type: application/json" -d "$teams_message" "$TEAMS_WEBHOOK_URL"
