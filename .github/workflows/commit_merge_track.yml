name: Detect "Commit merge" Conflict Resolution from Main

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  detect-conflict-merge-message:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required to get full commit history

      - name: Fetch base branch
        run: git fetch origin ${{ github.base_ref }}
      - name: Detect conflict-resolution merges and validate commit types
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üîç Fetching commit messages from PR via GitHub CLI..."
          
          pr_number=${{ github.event.pull_request.number }}
          base_branch=${{ github.base_ref }}
          head_branch=${{ github.head_ref }}
          expected_merge_msg="Merge branch '$base_branch' into $head_branch"
      
          # Get all commit messages
          messages=$(gh pr view "$pr_number" --json commits --jq '.commits[].commit.message')
      
          echo "üîé Commit messages in PR:"
          echo "$messages"
      
          # ‚úÖ Detect GitHub conflict-style commit
          if echo "$messages" | grep -Fx "$expected_merge_msg"; then
            echo "‚ùå Conflict-resolution merge detected:"
            echo "$expected_merge_msg"
            echo "‚ùó Please resolve conflicts locally using: git rebase origin/$base_branch"
            exit 1
          fi
      
          # ‚úÖ Validate commit types (Conventional Commits)
          echo "$messages" | grep -vE '^feat:|^fix:|^docs:|^chore:|^refactor:|^style:|^test:' > invalid.txt || true
      
          if [ -s invalid.txt ]; then
            echo "‚ùå The following commits don't follow Conventional Commit format:"
            cat invalid.txt
            echo "‚ùó Use types like: feat:, fix:, docs:, chore:, etc."
            exit 1
          fi
      
          echo "‚úÖ All commit messages are valid and no GitHub conflict-resolution merge found."


      # - name: Detect conflict-resolution merge commit from base branch
      #   run: |
      #     echo "üîç Checking for conflict-resolution merge commits..."
          
      #     expected="Merge branch '${{ github.base_ref }}' into ${{ github.head_ref }}"
      #     echo "üîé Expected merge message (if conflict was resolved with GitHub UI):"
      #     echo "$expected"

      #     merge_msgs=$(git log origin/${{ github.base_ref }}..HEAD --merges --pretty=format:"%s")

      #     if echo "$merge_msgs" | grep -Fx "$expected"; then
      #       echo "‚ö†Ô∏è Detected GitHub 'Commit merge' conflict resolution commit:"
      #       echo "$expected"
      #       echo "‚ùó Please resolve conflicts locally using 'git rebase origin/${{ github.base_ref }}'"
      #       exit 1
      #     fi

      #     echo "‚úÖ No conflict-resolution merge commits found. All good."
